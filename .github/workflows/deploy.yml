name: Build and Deploy

on:
  push:
    branches:
      - main  # Triggers the workflow on any push to the 'main' branch
    paths-ignore:
      - deploy.lock  # Prevents the workflow from running if only these files are changed

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Check out the repository code
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Node.js environment
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'  # Specify your Node version

      # Install dependencies
      - name: Install dependencies
        run: npm install

      # Run the build script locally
      - name: Run build
        run: npm run build

      # Add SSH key to the agent for deployment
      - name: Add SSH key
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      # Deploy to Server
      - name: Deploy to Server
        run: |
            ssh -o StrictHostKeyChecking=no root@66.179.189.159 << 'EOF'
            set -e  # Exit immediately if a command exits with a non-zero status
            PROJECT_DIR="/hobohippie"
            LOCK_FILE="$PROJECT_DIR/deploy.lock"

            # Check if deployment is already in progress
            if [ -f "$LOCK_FILE" ]; then
              echo "Deployment is already in progress. Exiting."
              exit 1
            fi
            
            # Create lock file
            touch "$LOCK_FILE"
            echo "Lock file created."

            # Function to clean up lock file on exit
            cleanup() {
              rm -f "$LOCK_FILE"
              echo "Lock file removed."
            }
            trap cleanup EXIT  # Ensure cleanup runs on exit

            # Navigate to the project directory
            cd "$PROJECT_DIR/client" || exit 1

            # Fetch the latest code from the repository
            git fetch origin main && git reset --hard origin/main

            # Install dependencies and run the build
            npm install --verbose && npm run build --verbose

            # Restart the application using PM2
            pm2 restart hobohippie
            EOF
